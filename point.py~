#!/usr/bin/env python3
"""Module proposant la classe Point2D"""

import math

class Point2D:
	def __init__(self, x: float, y: float):
		self._x = x
		self._y = y

	@property
	def x(self)->float:
		return self._x

	@property
	def y(self)->float:
		return self._y
	

    
    

    
    # def distance(self, point2):
	# if self.getX() == point2.getX():
	#     return abs(self.getY() - point2.getY())

	# if self.getY() == point2.getY():
	#     return abs(self.getX() - point2.getX())

	# return math.hypot(self.getX() - point2.getX(), self.getY() - point2.getY())
    
    # def linearEquation(self, point2):
	# 	coeffA = (point2.getY() - self.getY()) / (point2.getX() - self.getX())
	# 	coeffB = self.getY() - coeffA * self.getX()

	# 	return coeffA, coeffB

            

#self.module = math.hypot(x, y)
# if x != 0:
# 	self.angle = math.atan(y / x)

# else:
# 	if y == 0:
# 		self.angle = 0

# 	elif y < 0:
		# 		self.angle = -math.pi / 2
            
	    # 	else:
	# 		self.angle = math.pi / 2

    #def getModule(self):
	#return self.module
    
    #def getAngle(self):
	#return self.angle
    
